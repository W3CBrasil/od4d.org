# Scaffolding generated by Casein v5.0.0.0

module Casein
  class LanguagesController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Languages'
  		@languages = Language.order(sort_order(:name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View language'
      @language = Language.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new language'
    	@language = Language.new
    end

    def create
      @language = Language.new language_params
    
      if @language.save
        flash[:notice] = 'Language created'
        redirect_to casein_languages_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new language'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update language'
      
      @language = Language.find params[:id]
    
      if @language.update_attributes language_params
        flash[:notice] = 'Language has been updated'
        redirect_to casein_languages_path
      else
        flash.now[:warning] = 'There were problems when trying to update this language'
        render :action => :show
      end
    end
 
    def destroy
      @language = Language.find params[:id]

      @language.destroy
      flash[:notice] = 'Language has been deleted'
      redirect_to casein_languages_path
    end
  
    private
      
      def language_params
        params.require(:language).permit(:name)
      end

  end
end